// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/19/2022 00:13:55"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          main
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module main_vlg_vec_tst();
// constants                                           
// general purpose registers
reg btnMudar;
reg chave14;
reg chave24;
reg chaveParar;
reg clock;
// wires                                               
wire buzzer;
wire [4:0] cronometro1;
wire [6:0] display;
wire [3:0] escolhaDisplay;

// assign statements (if any)                          
main i1 (
// port map - connection between master ports and signals/registers   
	.btnMudar(btnMudar),
	.buzzer(buzzer),
	.chave14(chave14),
	.chave24(chave24),
	.chaveParar(chaveParar),
	.clock(clock),
	.cronometro1(cronometro1),
	.display(display),
	.escolhaDisplay(escolhaDisplay)
);
initial 
begin 
#100000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #1000000 1'b1;
	#1000000;
end 

// btnMudar
always
begin
	btnMudar = 1'b0;
	btnMudar = #1000000 1'b1;
	#1000000;
end 

// chaveParar
initial
begin
	chaveParar = 1'b1;
end 

// chave14
always
begin
	chave14 = 1'b0;
	chave14 = #25000000 1'b1;
	#25000000;
end 

// chave24
always
begin
	chave24 = 1'b0;
	chave24 = #50000000 1'b1;
	#50000000;
end 
endmodule

